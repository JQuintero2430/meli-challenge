services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: meli
      POSTGRES_PASSWORD: meli123
      POSTGRES_DB: meli
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./meli-be/src/main/resources/db/init/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./meli-be/src/main/resources/db/init/init-script.sh:/docker-entrypoint-initdb.d/init-script.sh
    command: >
      bash -c "
        chmod +x /docker-entrypoint-initdb.d/init-script.sh &&
        docker-entrypoint.sh postgres
      "
    networks:
      - meli-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meli"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./meli-be
    container_name: meli-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/meli
      SPRING_DATASOURCE_USERNAME: meli
      SPRING_DATASOURCE_PASSWORD: meli123
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - meli-net

  frontend:
    build:
      context: ./meli-fe
    container_name: meli-frontend
    ports:
      - "4321:4321"
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    networks:
      - meli-net

volumes:
  postgres_data:

networks:
  meli-net:
