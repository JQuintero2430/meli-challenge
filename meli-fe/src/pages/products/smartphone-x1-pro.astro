---
// src/pages/products/[slug].astro
export const prerender = false;

const { slug } = Astro.params;
const { productId } = Astro.url.searchParams;

// Fetch product data
let product = null;
let seller = null;
let user = null;
let error = null;

try {
    // Fetch product
    const productResponse = await fetch(`http://localhost:8080/api/products/${slug}?productId=${productId}`);
    if (!productResponse.ok) throw new Error('Product not found');
    product = await productResponse.json();

    // Fetch seller data (assuming sellerId is available from product or context)
    const sellerId = 1; // This should come from your product data or context
    const sellerResponse = await fetch(`http://localhost:8080/api/seller/${sellerId}`);
    if (sellerResponse.ok) {
        seller = await sellerResponse.json();
    }

    // Fetch user data (assuming userId is available from session or context)
    const userId = 2; // This should come from your authentication context
    const userResponse = await fetch(`http://localhost:8080/api/user/${userId}`);
    if (userResponse.ok) {
        user = await userResponse.json();
    }
} catch (err) {
    error = err.message;
}
---

<html lang="es">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{product?.title || 'Producto no encontrado'} - MercadoLibre</title>
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                background-color: #ebebeb;
                color: #333;
            }

            .header {
                background: #fff159;
                padding: 12px 0;
                box-shadow: 0 1px 0 rgba(0,0,0,.1);
            }

            .header-content {
                max-width: 1200px;
                margin: 0 auto;
                padding: 0 16px;
                display: flex;
                align-items: center;
                gap: 24px;
            }

            .logo {
                font-size: 24px;
                font-weight: bold;
                color: #333;
                text-decoration: none;
            }

            .search-bar {
                flex: 1;
                max-width: 600px;
                position: relative;
            }

            .search-input {
                width: 100%;
                padding: 12px 48px 12px 16px;
                border: none;
                border-radius: 2px;
                font-size: 16px;
                box-shadow: 0 1px 2px rgba(0,0,0,.2);
            }

            .search-btn {
                position: absolute;
                right: 0;
                top: 0;
                bottom: 0;
                width: 46px;
                border: none;
                background: #f7f7f7;
                cursor: pointer;
                border-radius: 0 2px 2px 0;
            }

            .container {
                max-width: 1200px;
                margin: 0 auto;
                padding: 32px 16px;
            }

            .breadcrumb {
                background: white;
                padding: 16px;
                border-radius: 4px;
                margin-bottom: 32px;
                font-size: 14px;
                color: #666;
            }

            .product-layout {
                display: grid;
                grid-template-columns: 1fr 350px;
                gap: 32px;
                align-items: start;
            }

            .product-main {
                background: white;
                border-radius: 8px;
                overflow: hidden;
            }

            .product-images {
                display: grid;
                grid-template-columns: 80px 1fr;
                gap: 16px;
                padding: 32px;
            }

            .thumbnails {
                display: flex;
                flex-direction: column;
                gap: 8px;
            }

            .thumbnail {
                width: 64px;
                height: 64px;
                border: 2px solid #e6e6e6;
                border-radius: 4px;
                cursor: pointer;
                object-fit: cover;
            }

            .thumbnail.active {
                border-color: #3483fa;
            }

            .main-image {
                width: 100%;
                max-width: 500px;
                height: 400px;
                object-fit: cover;
                border-radius: 4px;
            }

            .product-info {
                padding: 0 32px 32px;
            }

            .product-condition {
                font-size: 14px;
                color: #666;
                margin-bottom: 8px;
            }

            .product-title {
                font-size: 24px;
                font-weight: 600;
                margin-bottom: 16px;
                line-height: 1.3;
            }

            .product-rating {
                display: flex;
                align-items: center;
                gap: 8px;
                margin-bottom: 24px;
                font-size: 14px;
            }

            .stars {
                color: #00a650;
            }

            .product-price {
                font-size: 36px;
                font-weight: 300;
                margin-bottom: 8px;
            }

            .price-details {
                font-size: 14px;
                color: #00a650;
                margin-bottom: 24px;
            }

            .product-attributes {
                margin-bottom: 32px;
            }

            .attribute-title {
                font-size: 16px;
                font-weight: 600;
                margin-bottom: 16px;
            }

            .attribute-list {
                display: grid;
                gap: 8px;
            }

            .attribute-item {
                display: flex;
                justify-content: space-between;
                padding: 8px 0;
                border-bottom: 1px solid #f5f5f5;
                font-size: 14px;
            }

            .attribute-label {
                color: #666;
            }

            .sidebar {
                display: flex;
                flex-direction: column;
                gap: 24px;
            }

            .purchase-box {
                background: white;
                border-radius: 8px;
                padding: 24px;
            }

            .stock-info {
                font-size: 14px;
                color: #00a650;
                margin-bottom: 16px;
            }

            .quantity-selector {
                margin-bottom: 24px;
            }

            .quantity-label {
                font-size: 14px;
                color: #666;
                margin-bottom: 8px;
            }

            .quantity-input {
                width: 60px;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
                text-align: center;
            }

            .action-buttons {
                display: flex;
                flex-direction: column;
                gap: 12px;
            }

            .btn {
                padding: 12px 24px;
                border: none;
                border-radius: 6px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                text-align: center;
                text-decoration: none;
                transition: all 0.2s;
            }

            .btn-primary {
                background: #3483fa;
                color: white;
            }

            .btn-primary:hover {
                background: #2968c8;
            }

            .btn-secondary {
                background: #e6f7ff;
                color: #3483fa;
                border: 1px solid #3483fa;
            }

            .btn-secondary:hover {
                background: #d4edff;
            }

            .seller-info {
                background: white;
                border-radius: 8px;
                padding: 24px;
            }

            .seller-header {
                display: flex;
                align-items: center;
                gap: 12px;
                margin-bottom: 16px;
            }

            .seller-avatar {
                width: 48px;
                height: 48px;
                border-radius: 50%;
                object-fit: cover;
            }

            .seller-name {
                font-size: 16px;
                font-weight: 600;
                color: #3483fa;
                text-decoration: none;
            }

            .seller-stats {
                display: grid;
                gap: 8px;
                font-size: 14px;
            }

            .stat-item {
                display: flex;
                justify-content: space-between;
            }

            .stat-label {
                color: #666;
            }

            .reputation {
                color: #00a650;
                font-weight: 600;
            }

            .payment-methods {
                background: white;
                border-radius: 8px;
                padding: 24px;
            }

            .payment-title {
                font-size: 16px;
                font-weight: 600;
                margin-bottom: 16px;
            }

            .payment-list {
                display: flex;
                flex-wrap: wrap;
                gap: 8px;
            }

            .payment-method {
                display: flex;
                align-items: center;
                gap: 8px;
                padding: 8px 12px;
                border: 1px solid #e6e6e6;
                border-radius: 4px;
                font-size: 12px;
            }

            .payment-icon {
                width: 24px;
                height: 16px;
                object-fit: contain;
            }

            .error {
                background: #fff;
                border-radius: 8px;
                padding: 48px;
                text-align: center;
                color: #666;
            }

            @media (max-width: 768px) {
                .header-content {
                    flex-direction: column;
                    gap: 16px;
                }

                .search-bar {
                    order: -1;
                    max-width: none;
                }

                .product-layout {
                    grid-template-columns: 1fr;
                    gap: 24px;
                }

                .product-images {
                    grid-template-columns: 1fr;
                    gap: 16px;
                }

                .thumbnails {
                    flex-direction: row;
                    overflow-x: auto;
                    padding-bottom: 8px;
                }

                .thumbnail {
                    flex-shrink: 0;
                }

                .main-image {
                    height: 300px;
                }

                .product-info,
                .product-images {
                    padding: 24px 16px;
                }
            }
        </style>
        </head>

        <body>
        <header class="header">
            <div class="header-content">
                <a href="/" class="logo">MercadoLibre</a>
                <div class="search-bar">
                    <input type="text" class="search-input" placeholder="Buscar productos, marcas y más...">
                    <button class="search-btn">🔍</button>
                </div>
            </div>
        </header>

        <main class="container">
            {error ? (
                    <div class="error">
                        <h2>Error al cargar el producto</h2>
                        <p>{error}</p>
                    </div>
            ) : product ? (
                    <>
                        <nav class="breadcrumb">
                            <span>{product.category}</span> > <span>{product.title}</span>
                        </nav>

                        <div class="product-layout">
                            <div class="product-main">
                                <div class="product-images">
                                    <div class="thumbnails">
                                        <img src="/placeholder.svg?height=64&width=64" alt="Thumbnail 1" class="thumbnail active">
                                        <img src="/placeholder.svg?height=64&width=64" alt="Thumbnail 2" class="thumbnail">
                                        <img src="/placeholder.svg?height=64&width=64" alt="Thumbnail 3" class="thumbnail">
                                        <img src="/placeholder.svg?height=64&width=64" alt="Thumbnail 4" class="thumbnail">
                                    </div>
                                    <img src="/placeholder.svg?height=400&width=500" alt={product.title} class="main-image">
                                </div>

                                <div class="product-info">
                                    <div class="product-condition">Nuevo | +1000 vendidos</div>
                                    <h1 class="product-title">{product.title}</h1>

                                    <div class="product-rating">
                                        <span class="stars">★★★★★</span>
                                        <span>4.5 (234 opiniones)</span>
                                    </div>

                                    <div class="product-price">
                                        ${product.price.toLocaleString('es-AR', { minimumFractionDigits: 2 })}
                                    </div>
                                    <div class="price-details">
                                        en 12x ${(product.price / 12).toLocaleString('es-AR', { minimumFractionDigits: 2 })} sin interés
                                    </div>

                                    <div class="product-attributes">
                                        <h3 class="attribute-title">Características principales</h3>
                                        <div class="attribute-list">
                                            {Object.entries(product.attributes).map(([key, value]) => (
                                                    <div class="attribute-item">
                                                        <span class="attribute-label">{key.replace('_', ' ').replace(/\b\w/g, l => l.toUpperCase())}</span>
                                                        <span>{value}</span>
                                                    </div>
                                            ))}
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <aside class="sidebar">
                                <div class="purchase-box">
                                    <div class="stock-info">Stock disponible: {product.stock} unidades</div>

                                    <div class="quantity-selector">
                                        <label class="quantity-label">Cantidad:</label>
                                        <input type="number" class="quantity-input" value="1" min="1" max={product.stock}>
                                    </div>

                                    <div class="action-buttons">
                                        <button class="btn btn-primary">Comprar ahora</button>
                                        <button class="btn btn-secondary">Agregar al carrito</button>
                                    </div>
                                </div>

                                {seller && (
                                        <div class="seller-info">
                                            <div class="seller-header">
                                                <img src={seller.imageUrl || "/placeholder.svg"} alt={seller.nickname} class="seller-avatar">
                                                <a href={`/seller/${seller.id}`} class="seller-name">{seller.nickname}</a>
                                            </div>

                                            <div class="seller-stats">
                                                <div class="stat-item">
                                                    <span class="stat-label">Reputación</span>
                                                    <span class="reputation">{seller.reputationScore}/5</span>
                                                </div>
                                                <div class="stat-item">
                                                    <span class="stat-label">Ventas</span>
                                                    <span>{seller.totalSales.toLocaleString()}</span>
                                                </div>
                                                <div class="stat-item">
                                                    <span class="stat-label">Productos</span>
                                                    <span>{seller.totalProductsListed.toLocaleString()}</span>
                                                </div>
                                            </div>
                                        </div>
                                )}

                                {user && user.paymentMethodsAvailable && (
                                        <div class="payment-methods">
                                            <h3 class="payment-title">Medios de pago</h3>
                                            <div class="payment-list">
                                                {user.paymentMethodsAvailable.map((method) => (
                                                        <div class="payment-method">
                                                            <img src={method.imageUrl || "/placeholder.svg"} alt={method.provider} class="payment-icon">
                                                            <span>{method.provider} {method.type.replace('_', ' ')}</span>
                                                        </div>
                                                ))}
                                            </div>
                                        </div>
                                )}
                            </aside>
                        </div>
                    </>
            ) : (
                    <div class="error">
                        <h2>Producto no encontrado</h2>
                        <p>El producto que buscas no existe o no está disponible.</p>
                    </div>
            )}
        </main>

        <script>
            // Thumbnail image switching
            document.querySelectorAll('.thumbnail').forEach((thumb, index) => {
                thumb.addEventListener('click', () => {
                    document.querySelectorAll('.thumbnail').forEach(t => t.classList.remove('active'));
                    thumb.classList.add('active');

                    const mainImage = document.querySelector('.main-image');
                    const queries = ['smartphone-main', 'smartphone-back', 'smartphone-side', 'smartphone-box'];
                    mainImage.src = `/placeholder.svg?height=400&width=500&query=${queries[index]}`;
                });
            });

            // Quantity selector validation
            const quantityInput = document.querySelector('.quantity-input');
            if (quantityInput) {
                quantityInput.addEventListener('change', (e) => {
                    const value = parseInt(e.target.value);
                    const max = parseInt(e.target.max);
                    const min = parseInt(e.target.min);

                    if (value > max) e.target.value = max;
                    if (value < min) e.target.value = min;
                });
            }
        </script>
        </body>
        </html>